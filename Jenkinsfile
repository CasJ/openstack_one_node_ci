stage 'Deployment'

echo 'Deploying OpenStack using OSA for single node'
node('openstack-agent-xl') {
    
    // Wait for cloud-init to finish
    wait_for_cloud_init()

    // Deploy OpenStack and Tempest
    sh '''
    git clone https://github.com/openstack/openstack-ansible  /home/ubuntu/openstack-ansible
    cd /home/ubuntu/openstack-ansible
    git checkout stable/mitaka
    export apply_security_hardening=false
    sudo scripts/bootstrap-ansible.sh
    sudo scripts/bootstrap-aio.sh
    sudo scripts/run-playbooks.sh
    cd playbooks/
    #sudo openstack-ansible setup-everything.yml
    sudo openstack-ansible os-tempest-install.yml
    '''

}


stage 'Post-Deployment Validation'

def config

echo 'Running tests to validate the OpenStack deployment'
node('openstack-agent-xl') {
   
    // Get the tempest config file generated by the OSA deployment
    sh '''
    container_name=$(sudo lxc-ls -f | grep aio1_utility_container- | awk '{print $1}')
    sudo cp /var/lib/lxc/$container_name/rootfs/opt/tempest_untagged/etc/tempest.conf /home/ubuntu/tempest.conf
    '''
    config = readFile '/home/ubuntu/tempest.conf'
    
}

echo 'Launching a new VM and installing Tempest on it'
node('openstack-agenk-sm') {
    
    // Wait for cloud-init to finish
    wait_for_cloud_init()
    
    // Install Tempest
    sh '''
    git clone https://github.com/openstack/tempest.git /home/ubuntu/tempest
    cd /home/ubuntu/tempest/
    sudo pip install -r requirements.txt
    '''
    // Write the configuration into a file
    writeFile file: '/home/ubuntu/tempest/etc/tempest.conf', text: "${config}"
    echo "Using the following Tempest configuration: ${config}"

}

def wait_for_cloud_init() {
    
    // Wait up to five minutes for cloud-init to finish installing packages
    timeout(5) {
        waitUntil {
            echo 'Waiting for cloud-init to finish'
            def cloud_init = readFile('/var/log/cloud-init-output.log')
            def matcher = cloud_init =~ 'Cloud-init .* finished'
            matcher ? true : false
        }
        echo 'Cloud-init completed'
    }

}

